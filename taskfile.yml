version: '3'

dotenv: ['dev.env']

tasks:
  pull:
    cmds:
      - docker pull caddy:latest
      - docker pull ghcr.io/buggregator/server:latest
      - docker pull redis:latest
      - docker pull minio/minio:latest

  build:
    cmds:
      - docker build --force-rm --load --tag laravel_app_dev:1.0 .
      - docker image prune -f

  install:
    cmds:
      - docker exec -it apps_dev sh -c 'composer install && php artisan horizon:publish && php artisan telescope:publish'
      - docker exec -it apps_dev php artisan key:generate
      - docker exec -it apps_dev php artisan migrate --force

  up:
    cmds:
      - docker compose up -d

  queue:
    cmds:
      - docker exec -it apps_dev php artisan horizon

  down:
    cmds:
      - docker compose down

  bun-install:
    cmds:
      - cd apps/frontend && bun install

  bun-dev:
    cmds:
      - cd apps/frontend && bun run dev

  bun-prod:
    cmds:
      - cd apps/frontend && bun run build

  lang-update:
    cmds:
      - docker exec -it apps_dev php artisan lang:update

  phpcs-fix:
    cmds:
      - docker exec -it apps_dev vendor/bin/php-cs-fixer fix --config phpcs.php

  phpstan:
    cmds:
      - docker exec -it apps_dev ./vendor/bin/phpstan analyse --memory-limit=256M

  check-security:
    cmds:
      - docker exec -it apps_dev security-checker security:check composer.lock
      - docker exec -it apps_dev composer audit

  logs:
    cmds:
      - docker compose logs -f

  console:
    cmds:
      - docker exec -it apps_dev sh

  lint-dockerfile:
    cmds:
      - docker run --rm -i hadolint/hadolint < Dockerfile

  validate-and-format-caddyfile:
    cmds:
      - docker run --rm -v .:/code -i caddy:2.8-alpine caddy validate --config /code/Caddyfile
      - docker run --rm -v .:/code -i caddy:2.8-alpine caddy fmt --overwrite /code/Caddyfile

  lint-yaml:
    cmds:
      - yamllint -d relaxed docker-compose.yml docker-compose.rpc.yml taskfile.yml
