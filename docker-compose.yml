version: '3'

# include:
  # - docker-compose.rpc.yml
  # - docker-compose.monitor.yml

services:
  apps:
    image: laravel_app_dev:1.0
    container_name: apps_dev
    env_file:
      - dev.env
    volumes:
      - ./phpfpm/env.conf:/opt/bitnami/php/etc/php-fpm.d/env.conf
      - ./phpfpm/custom.ini:/opt/bitnami/php/etc/conf.d/custom.ini
      - ./phpfpm/logs:/var/log/php-fpm/
      - ./apps:/app
    networks:
      - app_dev
    ports:
      - "5173:5173"
    depends_on:
      - pgsql
      - dragonflydb
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

  caddy:
    image: caddy:2.7
    container_name: caddy_dev
    ports:
      - "80:80"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./apps:/app
      - caddy_data:/data
    networks:
      - app_dev
    depends_on:
      - apps
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 128M

  pgsql:
    image: postgres:16-alpine
    container_name: pgsql_dev
    env_file:
      - dev.env
    command: [
      postgres,
      -c, shared_preload_libraries=pg_stat_statements,
      -c, log_connections=on,
      -c, log_statement=all,
      -c, "log_line_prefix=%m [%p]: [%l-1] app=%a,db=%d,client=%h,user=%u ",
      -c, cluster_name=instance15,
    ]
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - pgsql_run:/var/run/postgresql/
    networks:
      - app_dev
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

  pgweb:
    image: sosedoff/pgweb:latest
    container_name: pgweb_dev
    env_file:
      - dev.env
    networks:
      - app_dev
    ports:
      - "8081:8081"
    depends_on:
      - pgsql
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 64M

  buggregator:
    image: ghcr.io/buggregator/server:latest
    container_name: buggregator_dev
    networks:
      - app_dev
    ports:
      - "8000:8000"
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

  dragonflydb:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: dragonflydb_dev
    volumes:
      - dragonflydb_data:/data
    networks:
      - app_dev
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      memlock: -1
    deploy:
      resources:
        limits:
          memory: 1G

  minio:
    image: minio/minio:latest
    container_name: minio_dev
    command: [
      "server",
      "--console-address",
      ":9001",
      "/data"
    ]
    env_file:
      - dev.env
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app_dev
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  caddy_data:
    name: caddy_dev_data
  pgsql_data:
    name: pgsql_dev_data
  pgsql_run:
    name: pgsql_dev_run
  dragonflydb_data:
    name: dragonflydb_dev_data
  minio_data:
    name: minio_dev_data

networks:
   app_dev:
     driver: bridge
     name: app_dev
