version: '3'

services:
  apps:
    image: laravel_app_dev:1.0
    container_name: apps_dev
    env_file:
      - dev.env
    volumes:
      - ./phpfpm/env.conf:/opt/bitnami/php/etc/php-fpm.d/env.conf
      - ./phpfpm/custom.ini:/opt/bitnami/php/etc/conf.d/custom.ini
      - ./phpfpm/logs:/var/log/php-fpm/
      - ./apps:/app
    networks:
      - app_dev
    ports:
      - "5173:5173"
    depends_on:
      - pgsql
      - redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

  caddy:
    image: caddy:2.7
    container_name: caddy_dev
    ports:
      - "80:80"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./apps:/app
      - caddy_data:/data
    networks:
      - app_dev
    depends_on:
      - apps
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 128M

  pgsql:
    image: postgres:15-alpine
    container_name: pgsql_dev
    env_file:
      - dev.env
    command: [
      postgres,
      -c, shared_preload_libraries=pg_stat_statements,
      -c, log_connections=on,
      -c, log_statement=all,
      -c, "log_line_prefix=%m [%p]: [%l-1] app=%a,db=%d,client=%h,user=%u ",
      -c, cluster_name=instance15,
    ]
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - pgsql_run:/var/run/postgresql/
    networks:
      - app_dev
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 512M

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer_dev
    env_file:
      - dev.env
    networks:
      - app_dev
    ports:
      - "8001:8080"
    depends_on:
      - pgsql
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 128M

  inbucket:
    image: inbucket/inbucket:main
    container_name: inbucket_dev
    networks:
      - app_dev
    ports:
      - "9001:9000"
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 128M

  redis:
    image: redis:7.2-alpine
    container_name: redis_dev
    command: [
      "redis-server",
      "--appendonly",
      "yes"
    ]
    volumes:
      - redis_data:/data
    networks:
      - app_dev
    logging:
      options:
        max-size: "10m"
        max-file: "1"
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    deploy:
      resources:
        limits:
          memory: 64M

  temboard-ui:
    image: dalibo/temboard:8
    container_name: temboard_ui_dev
    links:
      - repository
    env_file:
      - temboard.env
    ports:
      - "8888:8888"
    networks:
      - app_dev

  repository:
    image: postgres:15-alpine
    container_name: temboard_repository_dev
    env_file:
      - temboard.env
    command: [
      postgres,
      -c, log_connections=on,
      -c, log_statement=all,
      -c, "log_line_prefix=%m [%p]: [%l-1] app=%a,db=%d,client=%h,user=%u ",
      -c, cluster_name=repository,
    ]
    networks:
      - app_dev

  temboard-agent:
    image: dalibo/temboard-agent:8
    container_name: temboard_agent_dev
    volumes:
      - pgsql_data:/var/lib/postgresql/data
      - pgsql_run:/var/run/postgresql/
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app_dev
    links:
      - pgsql:pgsql.acme.tld
      - temboard-ui
    env_file:
      - temboard_agent.env

volumes:
  caddy_data:
  pgsql_data:
  pgsql_run:
  redis_data:

networks:
   app_dev:
     driver: bridge
     name: app_dev
