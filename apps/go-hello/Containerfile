FROM docker.io/library/golang:1.25.1-alpine3.22 AS build

WORKDIR /app

COPY go.mod go.sum ./

ENV CGO_ENABLED=1
ENV GOOS=linux

RUN apk update && apk add --no-cache \
    ca-certificates \
    git \
    build-base \
    gcc \
    g++ \
    linux-headers \
    zeromq \
    zeromq-dev \
    && rm -rf /var/cache/apk/*

RUN go mod download && go mod verify

COPY . .

RUN CGO_LDFLAGS="$CGO_LDFLAGS -lstdc++ -lm" \
    go build -v -a -o server ./...

FROM docker.io/library/alpine:3.22

WORKDIR /app

RUN apk add --no-cache zeromq

COPY --from=build /app/server .

EXPOSE 6001

CMD ["/app/server"]