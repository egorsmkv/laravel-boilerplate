FROM docker.io/library/golang:1.24.2-alpine3.21 AS build

WORKDIR /app

COPY go.mod go.sum ./

ENV CGO_ENABLED=1
ENV GOOS=linux

RUN apk update && apk add --no-cache \
    ca-certificates=20241121-r1 \
    git=2.47.2-r0 \
    build-base=0.5-r3 \
    gcc=14.2.0-r4 \
    g++=14.2.0-r4 \
    linux-headers=6.6-r1 \
    zeromq=4.3.5-r2 \
    zeromq-dev=4.3.5-r2 \
    && rm -rf /var/cache/apk/*

RUN go mod download && go mod verify

COPY . .

RUN CGO_LDFLAGS="$CGO_LDFLAGS -lstdc++ -lm" \
    go build -v -a -o server ./...

FROM docker.io/library/alpine:3.21

WORKDIR /app

RUN apk add --no-cache zeromq=4.3.5-r2

COPY --from=build /app/server .

EXPOSE 6001

CMD ["/app/server"]